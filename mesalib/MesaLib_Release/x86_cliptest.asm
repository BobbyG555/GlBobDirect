
































































































































































































































































































































































































































































































































































































































































































































































































































































	
	
	
	
	
	




































































































































































































































































































































































































































































































































































































































































































































	
	
	
	
	
	


































































































































































































































































































































































































































































	SECTION .data

clip_table:
	db 0x00, 0x01, 0x00, 0x02, 0x04, 0x05, 0x04, 0x06
	db 0x00, 0x01, 0x00, 0x02, 0x08, 0x09, 0x08, 0x0a
	db 0x20, 0x21, 0x20, 0x22, 0x24, 0x25, 0x24, 0x26
	db 0x20, 0x21, 0x20, 0x22, 0x28, 0x29, 0x28, 0x2a
	db 0x00, 0x01, 0x00, 0x02, 0x04, 0x05, 0x04, 0x06
	db 0x00, 0x01, 0x00, 0x02, 0x08, 0x09, 0x08, 0x0a
	db 0x10, 0x11, 0x10, 0x12, 0x14, 0x15, 0x14, 0x16
	db 0x10, 0x11, 0x10, 0x12, 0x18, 0x19, 0x18, 0x1a
	db 0x3f, 0x3d, 0x3f, 0x3e, 0x37, 0x35, 0x37, 0x36
	db 0x3f, 0x3d, 0x3f, 0x3e, 0x3b, 0x39, 0x3b, 0x3a
	db 0x2f, 0x2d, 0x2f, 0x2e, 0x27, 0x25, 0x27, 0x26
	db 0x2f, 0x2d, 0x2f, 0x2e, 0x2b, 0x29, 0x2b, 0x2a
	db 0x3f, 0x3d, 0x3f, 0x3e, 0x37, 0x35, 0x37, 0x36
	db 0x3f, 0x3d, 0x3f, 0x3e, 0x3b, 0x39, 0x3b, 0x3a
	db 0x1f, 0x1d, 0x1f, 0x1e, 0x17, 0x15, 0x17, 0x16
	db 0x1f, 0x1d, 0x1f, 0x1e, 0x1b, 0x19, 0x1b, 0x1a


	SECTION .text


















ALIGN 16
GLOBAL __mesa_x86_cliptest_points4
__mesa_x86_cliptest_points4:






	push ESI
	push EDI
	push EBP
	push EBX

















	mov ESI, dword [ESP + 16+4]
	mov EDI, dword [ESP + 16+8]

	mov EDX, dword [ESP + 16+12]
	mov EBX, dword [ESP + 16+16]

	mov EBP, dword [ESP + 16+20]
	mov EAX, dword [ESI + 12]

	mov ECX, dword [ESI + 8]
	mov ESI, dword [ESI + 4]

	or dword [EDI + 20], 0xf
	mov dword [ESP + 16+4], EAX	

	mov dword [EDI + 16], 4
	mov dword [EDI + 8], ECX

	mov EDI, dword [EDI + 4]
	add ECX, EDX

	mov dword [ESP + 16+12], ECX		
	cmp EDX, ECX

	mov AL, byte [EBX]
	mov AH, byte [EBP]

	jz near ctp4_finish

ALIGN 16
ctp4_top:

	fld1				
	fdiv dword [ESI + 12]		

	mov EBP, dword [ESI + 12]
	mov EBX, dword [ESI + 8]

	xor ECX, ECX
	add EBP, EBP	

	adc ECX, ECX
	add EBX, EBX	

	adc ECX, ECX
	cmp EBP, EBX	

	adc ECX, ECX
	mov EBX, dword [ESI + 4]

	add EBX, EBX	

	adc ECX, ECX
	cmp EBP, EBX	

	adc ECX, ECX
	mov EBX, dword [ESI + 0]

	add EBX, EBX	

	adc ECX, ECX
	cmp EBP, EBX	

	adc ECX, ECX






	mov CL, byte [ECX + clip_table]


	or AL, CL
	and AH, CL

	test CL, CL
	mov byte [EDX], CL

	jz near ctp4_proj

ctp4_noproj:

	fstp st0			

	mov dword [EDI + 0], 0
	mov dword [EDI + 4], 0
	mov dword [EDI + 8], 0
	mov dword [EDI + 12], 0x3f800000

	jmp ctp4_next

ctp4_proj:

	fld dword [ESI + 0]			
	fmul st0, st1

	fld dword [ESI + 4]			
	fmul st0, st2

	fld dword [ESI + 8]			
	fmul st0, st3

	fxch st2			
	fstp dword [EDI + 0]		
	fstp dword [EDI + 4]		
	fstp dword [EDI + 8]		
	fstp dword [EDI + 12]		

ctp4_next:

	inc EDX
	add EDI, 16

	add ESI, dword [ESP + 16+4]
	cmp dword [ESP + 16+12], EDX

	jnz near ctp4_top

	mov ECX, dword [ESP + 16+16]
	mov EDX, dword [ESP + 16+20]

	mov byte [ECX], AL
	mov byte [EDX], AH

ctp4_finish:

	mov EAX, dword [ESP + 16+8]



	pop EBX
	pop EBP
	pop EDI
	pop ESI

	ret







ALIGN 16
GLOBAL __mesa_x86_cliptest_points4_np
__mesa_x86_cliptest_points4_np:






	push ESI
	push EDI
	push EBP
	push EBX

















	mov ESI, dword [ESP + 16+4]
	

	mov EDX, dword [ESP + 16+12]
	mov EBX, dword [ESP + 16+16]

	mov EBP, dword [ESP + 16+20]
	mov EAX, dword [ESI + 12]

	mov ECX, dword [ESI + 8]
	mov ESI, dword [ESI + 4]

	mov dword [ESP + 16+8], EAX   	
	add ECX, EDX

	mov EDI, ECX		
	cmp EDX, ECX

	mov AL, byte [EBX]
	mov AH, byte [EBP]

	jz near ctp4_np_finish

ALIGN 16
ctp4_np_top:

	mov EBP, dword [ESI + 12]
	mov EBX, dword [ESI + 8]

	xor ECX, ECX
	add EBP, EBP	

	adc ECX, ECX
	add EBX, EBX	

	adc ECX, ECX
	cmp EBP, EBX	

	adc ECX, ECX
	mov EBX, dword [ESI + 4]

	add EBX, EBX	

	adc ECX, ECX
	cmp EBP, EBX	

	adc ECX, ECX
	mov EBX, dword [ESI + 0]

	add EBX, EBX	

	adc ECX, ECX
	cmp EBP, EBX	

	adc ECX, ECX






	mov CL, byte [ECX + clip_table]


	or AL, CL
	and AH, CL

	test CL, CL
	mov byte [EDX], CL

	inc EDX
	

	add ESI, dword [ESP + 16+8]
	cmp EDI, EDX

	jnz near ctp4_np_top

	mov ECX, dword [ESP + 16+16]
	mov EDX, dword [ESP + 16+20]

	mov byte [ECX], AL
	mov byte [EDX], AH

ctp4_np_finish:

	mov EAX, dword [ESP + 16+4]



	pop EBX
	pop EBP
	pop EDI
	pop ESI

	ret
